"""init

Revision ID: 9146e9ec5f02
Revises: 
Create Date: 2024-11-04 21:35:15.527412

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9146e9ec5f02'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('companies', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('companies', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('companies', 'type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('idx_16423_sqlite_autoindex_companies_1', table_name='companies')
    op.create_index(op.f('ix_companies_id'), 'companies', ['id'], unique=False)
    op.create_unique_constraint(None, 'companies', ['name'])
    op.alter_column('company_tag', 'company_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('company_tag', 'tag_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.drop_constraint('company_tag_company_id_fkey', 'company_tag', type_='foreignkey')
    op.drop_constraint('company_tag_tag_id_fkey', 'company_tag', type_='foreignkey')
    op.create_foreign_key(None, 'company_tag', 'companies', ['company_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'company_tag', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.alter_column('jobs', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('jobs', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.drop_index('idx_16394_sqlite_autoindex_jobs_1', table_name='jobs')
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    op.create_unique_constraint(None, 'jobs', ['title'])
    op.alter_column('salaries', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('salaries', 'company_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('salaries', 'location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('salaries', 'gross_salary',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('salaries', 'gender',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('salaries', 'experience_years_company',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('salaries', 'total_experience_years',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('salaries', 'level',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('salaries', 'work_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('salaries', 'leave_days',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('salaries', 'email_domain',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('salaries', 'verification',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_salaries_id'), 'salaries', ['id'], unique=False)
    op.alter_column('salary_job', 'salary_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('salary_job', 'job_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.drop_constraint('salary_job_job_id_fkey', 'salary_job', type_='foreignkey')
    op.drop_constraint('salary_job_salary_id_fkey', 'salary_job', type_='foreignkey')
    op.create_foreign_key(None, 'salary_job', 'salaries', ['salary_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'salary_job', 'jobs', ['job_id'], ['id'], ondelete='CASCADE')
    op.alter_column('salary_technical_stack', 'salary_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('salary_technical_stack', 'technical_stack_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.drop_constraint('salary_technical_stack_technical_stack_id_fkey', 'salary_technical_stack', type_='foreignkey')
    op.drop_constraint('salary_technical_stack_salary_id_fkey', 'salary_technical_stack', type_='foreignkey')
    op.create_foreign_key(None, 'salary_technical_stack', 'technical_stacks', ['technical_stack_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'salary_technical_stack', 'salaries', ['salary_id'], ['id'], ondelete='CASCADE')
    op.alter_column('tags', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tags', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.drop_index('idx_16415_sqlite_autoindex_tags_1', table_name='tags')
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_unique_constraint(None, 'tags', ['name'])
    op.alter_column('technical_stacks', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('technical_stacks', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.drop_index('idx_16399_sqlite_autoindex_technical_stacks_1', table_name='technical_stacks')
    op.create_index(op.f('ix_technical_stacks_id'), 'technical_stacks', ['id'], unique=False)
    op.create_unique_constraint(None, 'technical_stacks', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'technical_stacks', type_='unique')
    op.drop_index(op.f('ix_technical_stacks_id'), table_name='technical_stacks')
    op.create_index('idx_16399_sqlite_autoindex_technical_stacks_1', 'technical_stacks', ['name'], unique=True)
    op.alter_column('technical_stacks', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('technical_stacks', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'tags', type_='unique')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.create_index('idx_16415_sqlite_autoindex_tags_1', 'tags', ['name'], unique=True)
    op.alter_column('tags', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('tags', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'salary_technical_stack', type_='foreignkey')
    op.drop_constraint(None, 'salary_technical_stack', type_='foreignkey')
    op.create_foreign_key('salary_technical_stack_salary_id_fkey', 'salary_technical_stack', 'salaries', ['salary_id'], ['id'])
    op.create_foreign_key('salary_technical_stack_technical_stack_id_fkey', 'salary_technical_stack', 'technical_stacks', ['technical_stack_id'], ['id'])
    op.alter_column('salary_technical_stack', 'technical_stack_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('salary_technical_stack', 'salary_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.drop_constraint(None, 'salary_job', type_='foreignkey')
    op.drop_constraint(None, 'salary_job', type_='foreignkey')
    op.create_foreign_key('salary_job_salary_id_fkey', 'salary_job', 'salaries', ['salary_id'], ['id'])
    op.create_foreign_key('salary_job_job_id_fkey', 'salary_job', 'jobs', ['job_id'], ['id'])
    op.alter_column('salary_job', 'job_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('salary_job', 'salary_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.drop_index(op.f('ix_salaries_id'), table_name='salaries')
    op.alter_column('salaries', 'verification',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('salaries', 'email_domain',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('salaries', 'leave_days',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('salaries', 'work_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('salaries', 'level',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('salaries', 'total_experience_years',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('salaries', 'experience_years_company',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('salaries', 'gender',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('salaries', 'gross_salary',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('salaries', 'location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('salaries', 'company_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('salaries', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'jobs', type_='unique')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.create_index('idx_16394_sqlite_autoindex_jobs_1', 'jobs', ['title'], unique=True)
    op.alter_column('jobs', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('jobs', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'company_tag', type_='foreignkey')
    op.drop_constraint(None, 'company_tag', type_='foreignkey')
    op.create_foreign_key('company_tag_tag_id_fkey', 'company_tag', 'tags', ['tag_id'], ['id'])
    op.create_foreign_key('company_tag_company_id_fkey', 'company_tag', 'companies', ['company_id'], ['id'])
    op.alter_column('company_tag', 'tag_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('company_tag', 'company_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.drop_constraint(None, 'companies', type_='unique')
    op.drop_index(op.f('ix_companies_id'), table_name='companies')
    op.create_index('idx_16423_sqlite_autoindex_companies_1', 'companies', ['name'], unique=True)
    op.alter_column('companies', 'type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('companies', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('companies', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
