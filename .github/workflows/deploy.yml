name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_backend:
        description: 'Deploy backend'
        required: true
        type: boolean
        default: false
      deploy_frontend:
        description: 'Deploy frontend'
        required: true
        type: boolean
        default: false

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: salary-backend
  REGION: europe-west1
  SQLALCHEMY_DATABASE_URL: ${{ secrets.SQLALCHEMY_DATABASE_URL }}

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.4'

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install

    - name: Run checks
      run: make check

    - name: Run tests
      run: make test

    - name: Set up Cloud SDK
      if: github.event.inputs.deploy_backend == 'true'
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy Backend and Set URL
      if: github.event.inputs.deploy_backend == 'true'
      run: |
        make set-backend-env PROJECT_ID=${{ secrets.GCP_PROJECT_ID }} RECAPTCHA_KEY=${{ secrets.RECAPTCHA_KEY }}
        make deploy-backend SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}

  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run lint
      working-directory: ./frontend
      run: npm run lint

    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Set up Cloud SDK
      if: github.event.inputs.deploy_frontend == 'true'
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Install Firebase CLI
      if: github.event.inputs.deploy_frontend == 'true'
      run: npm install -g firebase-tools

    - name: Deploy Frontend
      if: github.event.inputs.deploy_frontend == 'true'
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        make set-frontend-env RECAPTCHA_KEY=${{ secrets.RECAPTCHA_KEY }}
        make deploy-frontend
